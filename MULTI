@import "tailwindcss";

:root {
--sand: #FAF9F6;
--charcoal: #333333;
--muted: #5a5a5a;
--divider: #E0E0E0;
--accent: #4A90E2; /* link + primary button */
}

@layer base {
html, body { height: 100%; }

body {
  background:
    radial-gradient(1100px 520px at 90% -10%, rgba(74, 144, 226, 0.08), rgba(250, 249, 246, 0)),
    radial-gradient(700px 360px at 10% 10%, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0)),
    var(--sand);
  color: var(--charcoal);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:focus-visible { outline: 2px solid var(--accent); outline-offset: 2px; }

a { transition: color 150ms ease, text-decoration-color 150ms ease; text-underline-offset: 2px; }
}

@layer utilities {
.bg-sand { background-color: var(--sand); }
.text-charcoal { color: var(--charcoal); }
.text-muted { color: var(--muted); }
.text-accent { color: var(--accent); }
.border-divider { border-color: var(--divider); }
.bg-accent { background-color: var(--accent); }
.shadow-soft { box-shadow: 0 8px 30px rgba(0,0,0,0.06); }

@keyframes fadeInUp { from { opacity: 0; transform: translateY(6px); } to { opacity: 1; transform: translateY(0); } }
.animate-fadeInUp { animation: fadeInUp 320ms ease both; }

@keyframes menuIn { from { opacity: 0; transform: translateY(-4px) scale(0.98); } to { opacity: 1; transform: translateY(0) scale(1); } }
.animate-menuIn { animation: menuIn 140ms ease-out both; }

/* Skip link */
.skip-link { position: absolute; left: -999px; top: auto; width: 1px; height: 1px; overflow: hidden; }
.skip-link:focus {
  left: 1rem; top: 1rem; width: auto; height: auto; padding: 0.5rem 0.75rem;
  background: #fff; color: var(--charcoal); border: 1px solid var(--divider); border-radius: 0.5rem;
  box-shadow: 0 10px 30px rgba(0,0,0,0.08);
}

/* Avatar outline */
.avatar-ring { box-shadow: inset 0 0 0 2px rgba(0,0,0,0.05); }
}

// components/header.tsx
"use client"

import Link from "next/link"
import { useEffect, useRef, useState } from "react"
import { usePathname } from "next/navigation"

export default function Header() {
const [open, setOpen] = useState(false)
const pathname = usePathname()
const menuRef = useRef<HTMLDivElement | null>(null)

useEffect(() => { setOpen(false) }, [pathname])

useEffect(() => {
  function onClickOutside(e: MouseEvent) {
    if (menuRef.current && !menuRef.current.contains(e.target as Node)) setOpen(false)
  }
  function onKey(e: KeyboardEvent) {
    if (e.key === "Escape") setOpen(false)
  }
  if (open) {
    document.addEventListener("mousedown", onClickOutside)
    document.addEventListener("keydown", onKey)
  }
  return () => {
    document.removeEventListener("mousedown", onClickOutside)
    document.removeEventListener("keydown", onKey)
  }
}, [open])

return (
  <header className="sticky top-0 z-40 border-b border-divider bg-sand/95 backdrop-blur">
    <div className="mx-auto max-w-5xl px-4 py-4 flex items-center justify-between">
      <Link
        href="/"
        className="flex items-center gap-2 text-base md:text-lg tracking-tight hover:text-accent transition-colors"
        aria-label="Go to home"
      >
        <span className="relative inline-flex h-7 w-7 items-center justify-center rounded-full border border-divider bg-sand">
          <span className="text-[11px] font-medium" aria-hidden="true">SE</span>
          <span className="sr-only">Logo</span>
        </span>
        <span className="hidden sm:inline">[Your Name]</span>
      </Link>

      <div className="relative" ref={menuRef}>
        <button
          aria-label="Toggle menu"
          aria-expanded={open}
          aria-controls="main-menu"
          onClick={() => setOpen(v => !v)}
          className="relative h-10 rounded-md border border-divider bg-sand hover:shadow-soft focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--accent)]/40 px-3 flex items-center gap-2"
        >
          <span className={`block h-[2px] w-5 bg-charcoal transition-transform ${open ? "translate-y-[6px] rotate-45" : ""}`} />
          <span className={`block h-[2px] w-5 bg-charcoal my-[5px] transition-opacity ${open ? "opacity-0" : "opacity-100"}`} />
          <span className={`block h-[2px] w-5 bg-charcoal transition-transform ${open ? "-translate-y-[6px] -rotate-45" : ""}`} />
          <span className="text-sm text-muted hidden sm:inline">Menu</span>
        </button>

        {open && (
          <nav
            id="main-menu"
            role="navigation"
            aria-label="Primary"
            className="absolute right-0 mt-3 w-44 rounded-md border border-divider bg-sand p-2 shadow-soft animate-menuIn"
          >
            <MenuLink href="/" label="Home" current={pathname === "/"} onSelect={() => setOpen(false)} />
            <MenuLink href="/about" label="About" current={pathname === "/about"} onSelect={() => setOpen(false)} />
            <MenuLink href="/projects" label="Projects" current={pathname === "/projects"} onSelect={() => setOpen(false)} />
          </nav>
        )}
      </div>
    </div>
  </header>
)
}

function MenuLink({
href, label, current, onSelect,
}: { href: string; label: string; current?: boolean; onSelect?: () => void }) {
return (
  <Link
    href={href}
    onClick={onSelect}
    className={`block rounded px-3 py-2 text-sm ${current ? "text-accent" : "text-charcoal hover:text-accent"} focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--accent)]/40`}
    aria-current={current ? "page" : undefined}
  >
    {label}
  </Link>
)
}

// app/page.tsx
import Link from "next/link"

export default function Home() {
return (
  <div className="flex flex-col items-center justify-center min-h-screen bg-sand text-charcoal">
    <h1 className="text-4xl font-bold mb-6">Welcome to My Portfolio</h1>
    <div className="flex flex-wrap items-center justify-center gap-3">
      <Link
        href="/about"
        className="rounded-md border border-divider bg-sand px-4 py-2 text-sm text-charcoal hover:shadow-soft focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--accent)]/40"
      >
        About Me
      </Link>
      <Link
        href="/projects"
        className="rounded-md bg-accent text-white px-4 py-2 text-sm hover:brightness-110 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--accent)]/40"
      >
        Projects
      </Link>
    </div>
  </div>
)
}
